services:
  postgres:
    image: postgres:14-alpine
    restart: always
    environment:
      POSTGRES_USER: example
      POSTGRES_PASSWORD: example
      POSTGRES_DB: devinelazik
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U example -d devinelazik"]
      interval: 5s
      retries: 5
    networks:
      - app-network

  db_init:
    build: .
    environment:
      DATABASE_URL: "postgresql://example:example@postgres:5432/devinelazik"
    command: >
      sh -c "
        echo 'Waiting for postgres...' &&
        until nc -z postgres 5432; do
          echo 'Waiting for postgres...'
          sleep 1
        done &&
        echo 'Postgres is up - creating database schema' &&
        npx prisma db push --force-reset
      "
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

  next_app:
    build: .
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: "postgresql://example:example@postgres:5432/devinelazik"
      NEXTAUTH_URL: ${NEXTAUTH_URL}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      DISCORD_CLIENT_ID: ${DISCORD_CLIENT_ID}
      DISCORD_CLIENT_SECRET: ${DISCORD_CLIENT_SECRET}
      SPOTIFY_CLIENT_ID: ${SPOTIFY_CLIENT_ID}
      SPOTIFY_CLIENT_SECRET: ${SPOTIFY_CLIENT_SECRET}
      SOCKET_IO_ENABLED: "true"  # Ajouté pour activer Socket.IO explicitement
      SOCKET_IO_PATH: "/socket.io"  # Chemin explicite pour Socket.IO
      HOSTNAME: "0.0.0.0"  # Écouter sur toutes les interfaces
    depends_on:
      db_init:
        condition: service_completed_successfully
    networks:
      - app-network
    # Configuration des limites de ressources
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
    # Redémarrage en cas d'échec
    restart: always
    # Configuration de la santé
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/socket-health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  app-network:
    driver: bridge

volumes:
  db_data: